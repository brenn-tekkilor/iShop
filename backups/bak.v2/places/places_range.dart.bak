import 'dart:math';
import 'dart:ui';

import 'package:flutter/material.dart';
import 'package:ishop/utils/util.dart' show Calculator;

import 'package:ishop/services/app_service.dart.bak';

class PlacesRange extends StatelessWidget implements PreferredSizeWidget {
  const PlacesRange({Key key}) : super(key: key);
  final double min = 0.0;
  final double max = 100.0;
  final divisions = 20;

  double convertRadiusToValue(double value) => (value >= 2.0 && value <= 156.0)
      ? value < 20.0
          ? Calculator.nearestMultipleInt(((value - 2.0) / 0.4), 5).toDouble()
          : Calculator.nearestMultipleInt(
                  (log(value / 3.81776) / log(1.03732)), 5)
              .toDouble()
      : 2.0;

  double convertValueToRadius(double value) => value < 5
      ? 2.0
      : value <= 45.0
          ? Calculator.nearestMultipleInt((0.4 * value + 2).toDouble(), 2)
              .toDouble()
          : Calculator.nearestMultipleInt(
                  (3.81776 * pow(1.03732, value)).toDouble(), 2)
              .toDouble();

  double getMapZoom(double value) => value != null
      ? value <= 10.0
          ? 12.0
          : value <= 30.0
              ? 11.0
              : value <= 55.0
                  ? 10.0
                  : value <= 90.0
                      ? 9.0
                      : 8.0
      : 12.0;

  @override
  Size get preferredSize => Size(double.infinity, 50.0);

  @override
  Widget build(BuildContext context) {
    final data = AppService.placesOf(context);
    var startValue = 0.0;
    var mapZoom = 12.0;

    return ValueListenableBuilder(
      builder: (BuildContext context, double radius, _) {
        if (radius != null) {
          final zoom = getMapZoom(startValue);
          if (mapZoom != zoom) {
            mapZoom = zoom;
            data.animateMapToZoomLevel(mapZoom);
          }
        }
        return Slider(
          min: min,
          max: max,
          divisions: divisions,
          value: startValue,
          label: Calculator.kilometerToMiles(data.radius).toInt().toString() +
              ' mi.',
          onChanged: (val) {
            if (val is double &&
                val != null &&
                val != startValue &&
                (startValue - val).round().abs() >= 5) {
              startValue = Calculator.nearestMultipleInt(val, 5).toDouble();
              data.radius = convertValueToRadius(startValue);
            }
          },
        );
      },
      valueListenable: data.radiusNotifier,
    );
  }
}
