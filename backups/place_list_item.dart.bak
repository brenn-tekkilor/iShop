import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:ishop/app/places/places_provider.dart';
// ignore: import_of_legacy_library_into_null_safe
import 'package:provider/provider.dart';

import 'file:///C:/Users/brenn/source/repos/brenn/ishop/lib/com/interfaces/geo_directional_map_item.dart';

/// PlaceCardItem
class PlaceListItem<T extends MapMarkerInfo> extends StatefulWidget {
  /// PlaceCardItem default const constructor
  const PlaceListItem({
    Key? key,
    @required required this.index,
    @required required this.data,
  }) : super(key: key);

  /// the index if in a list or nan
  final int index;

  /// the place info
  final T data;
  @override
  _PlaceListItemState createState() => _PlaceListItemState();
  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(ObjectFlagProperty<int>.has('index', index))
      ..add(ObjectFlagProperty<T>.has('data', data));
  }
}

class _PlaceListItemState extends State<PlaceListItem> {
  @override
  Widget build(BuildContext context) {
    var selectedPlace = context
        .select<PlacesProvider, PlaceListItem?>((p) => p.selectedListCard);
    final isSelected = selectedPlace == widget;
    final bgColor = isSelected ? Colors.blueGrey : Colors.white;
    return Padding(
      padding: const EdgeInsets.only(
        left: 2,
        right: 2,
        top: 2,
      ),
      child: GestureDetector(
        onTap: () {
          selectedPlace = isSelected ? null : widget;
        },
        child: Container(
          margin: const EdgeInsets.all(10),
          height: 70,
          decoration: BoxDecoration(
              color: bgColor,
              borderRadius: const BorderRadius.all(
                Radius.elliptical(5, 5),
              ),
              boxShadow: <BoxShadow>[
                BoxShadow(blurRadius: 20, color: Colors.grey.withOpacity(0.5))
              ]),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Container(
                width: 100,
                height: 50,
                margin: const EdgeInsets.only(left: 5),
                child: ClipRect(
                    child:
                        Image.asset(widget.data.logoPath, fit: BoxFit.cover)),
              ),
              Expanded(
                child: Container(
                  margin: const EdgeInsets.only(left: 5),
                  child: Text(widget.data.subheading,
                      style: Theme.of(context).primaryTextTheme.subtitle2),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
